// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TypeProvider is an autogenerated mock type for the TypeProvider type
type TypeProvider struct {
	mock.Mock
}

// CreateType provides a mock function with given fields: itemType, forEncoding
func (_m *TypeProvider) CreateType(itemType string, forEncoding bool) (interface{}, error) {
	ret := _m.Called(itemType, forEncoding)

	if len(ret) == 0 {
		panic("no return value specified for CreateType")
	}

	var r0 interface{}
	var r1 error
	if rf, ok := ret.Get(0).(func(string, bool) (interface{}, error)); ok {
		return rf(itemType, forEncoding)
	}
	if rf, ok := ret.Get(0).(func(string, bool) interface{}); ok {
		r0 = rf(itemType, forEncoding)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	if rf, ok := ret.Get(1).(func(string, bool) error); ok {
		r1 = rf(itemType, forEncoding)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewTypeProvider creates a new instance of TypeProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTypeProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *TypeProvider {
	mock := &TypeProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
