syntax = "proto3";
// this is it's own package to avoid name collision with median types like OnchainConfig and BuildReport
option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/mercury/v3;mercuryv3pb";

package loop.internal.pb.mercury.v3;


// the generate file in this dir specifies the import path of the relative proto files
// TODO: is there a better, more explicit to reference relayer.proto, which is really in the parent dir?
// naive attempt: import "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/relayer.proto"; and `../relayer.proto` did not work
import "relayer.proto";

// ReportCodec is a gRPC adapter for the ReportCodec interface [pkg/types/mercury/v3/ReportCodec].
// NOTE: MaxReport and ObservationTimestampFromReport are common amongst all mercury versions, but BuildReport is not.
// in principle they could be refactor to be shared, but it's not clear if that's worth the effort.
service ReportCodec {
    rpc BuildReport (BuildReportRequest) returns (BuildReportReply) {}
    rpc MaxReportLength (MaxReportLengthRequest) returns (MaxReportLengthReply) {}
    rpc ObservationTimestampFromReport (ObservationTimestampFromReportRequest) returns (ObservationTimestampFromReportReply) {}
  }
  
  // ReportFields is a gRPC adapter for the ReportFields struct [pkg/types/mercury/v3/ReportFields].
  message ReportFields {
    uint32 validFromTimestamp = 1; // TODO: use google.protobuf.Timestamp? uint32 is the base type in ReportFields [pkg/types/mercury/v3/ReportFields]
    uint32 timestamp = 2; // same as above
    BigInt nativeFee = 3; // TODO: WARNING this is a pointer in ReportFields
    BigInt linkFee = 4; // TODO: WARNING this is a pointer in ReportFields
    uint32 expiresAt = 5; // TODO: timestamp?
    BigInt benchmarkPrice = 6; // TODO: WARNING this is a pointer in ReportFields
    BigInt bid = 7; // TODO: WARNING this is a pointer in ReportFields
    BigInt ask = 8; // TODO: WARNING this is a pointer in ReportFields
  }
  
  // BuildReportRequest is gRPC adapter for the inputs arguments of [pkg/types/mercury/v3/ReportCodec.BuildReport].
  message BuildReportRequest {
    ReportFields reportFields = 1;
  } 
  
  // BuildReportReply is gRPC adapter for the return values of [pkg/types/mercury/v3/ReportCodec.BuildReport].
  message BuildReportReply {
    bytes report = 1;
  }
  
  // MaxReportLengthRequest has arguments for [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.MaxReportLength].
  message MaxReportLengthRequest {
    uint64 numOracles = 1; // TODO: WARNING this is a int in ReportCodec interface
  }
  
  // MaxReportLengthReply has return arguments for [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.MaxReportLength].
  message MaxReportLengthReply {
    uint64 maxReportLength = 1; //TODO: WARNING this is a int in ReportCodec interface
  }
  
  // ObservationTimestampFromReportRequest has arguments for [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.ObservationTimestampFromReport].
  message ObservationTimestampFromReportRequest {
    bytes report = 1;
  }
  //ObservationTimestampFromReportReply has return arguments for [github.com/smartcontractkit/chainlink-data-streams/mercury/v3/ReportCodec.ObservationTimestampFromReport].
  message ObservationTimestampFromReportReply {
    uint32 timestamp = 1; // TODO: WARNING this is a uint32 in ReportCodec interface
  }
  