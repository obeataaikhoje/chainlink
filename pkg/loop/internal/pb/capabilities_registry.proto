syntax = "proto3";

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb";

package loop;

import "values/pb/values.proto";
import "google/protobuf/empty.proto";

service CapabilitiesRegistry {
  rpc Get (GetRequest) returns (GetReply) {}
}

enum ExecuteAPIType {
  EXECUTE_API_TYPE_UNKNOWN = 0;
  EXECUTE_API_TYPE_TRIGGER = 1;
  EXECUTE_API_TYPE_CALLBACK = 2;
}

// Get has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.CapabilitiesRegistry.Get].
message GetRequest {
  string id = 1;
}

message GetReply {
  uint32 capabilityID = 1;
  ExecuteAPIType type = 2;
}

service BaseCapability {
  rpc Info (google.protobuf.Empty) returns (CapabilityInfoReply) {}
}

enum CapabilityType {
  CAPABILITY_TYPE_UNKNOWN = 0;
  CAPABILITY_TYPE_TRIGGER = 1;
  CAPABILITY_TYPE_ACTION = 2;
  CAPABILITY_TYPE_CONSENSUS = 3;
  CAPABILITY_TYPE_TARGET = 4;
}

message CapabilityInfoReply {
  string id = 1; 
  CapabilityType capability_type = 2;
  string Description = 3;
  string Version = 4;
}

message RequestMetadata {
  string WorkflowID = 1;
  string WorkflowExecutionID = 2;
}

message CapabilityRequest {
  RequestMetadata Metadata = 1;
  values.Value Config = 2;
  values.Value Inputs = 3;
}

message RegisterTriggerRequest {
  uint32 callbackID = 1;
  CapabilityRequest capability_request = 2;
}

message UnregisterTriggerRequest {
  CapabilityRequest capability_request = 1;
}

service TriggerCapability {
  rpc RegisterTrigger (RegisterTriggerRequest) returns (google.protobuf.Empty) {}
  rpc UnregisterTrigger (UnregisterTriggerRequest) returns (google.protobuf.Empty) {}
}

message CapabilityResponse {
  values.Value Value = 1;
  string Error = 2;
}

service Callback {
  rpc SendResponse(CapabilityResponse) returns (google.protobuf.Empty) {}
  rpc CloseCallback(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

message RegistrationMetadata {
  string WorkflowID = 1;
}

message RegisterToWorkflowRequest {
  RegistrationMetadata Metadata = 1;
  values.Value Config = 2;
}

message UnregisterFromWorkflowRequest {
  RegistrationMetadata Metadata = 1;
  values.Value Config = 2;
}

message ExecuteRequest {
  uint32 callbackID = 1;
  CapabilityRequest capability_request = 2;
}

service CallbackExecutable {
  rpc RegisterToWorkflow (RegisterToWorkflowRequest) returns (google.protobuf.Empty) {}
  rpc UnregisterFromWorkflow (UnregisterFromWorkflowRequest) returns (google.protobuf.Empty) {}
  rpc Execute (ExecuteRequest) returns (google.protobuf.Empty) {}
}
