// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: chain_reader.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortDirection int32

const (
	SortDirection_Asc  SortDirection = 0
	SortDirection_Desc SortDirection = 1
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "Asc",
		1: "Desc",
	}
	SortDirection_value = map[string]int32{
		"Asc":  0,
		"Desc": 1,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_chain_reader_proto_enumTypes[0].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_chain_reader_proto_enumTypes[0]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{0}
}

type AndFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*QueryFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *AndFilter) Reset() {
	*x = AndFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndFilter) ProtoMessage() {}

func (x *AndFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndFilter.ProtoReflect.Descriptor instead.
func (*AndFilter) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{0}
}

func (x *AndFilter) GetFilters() []*QueryFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type AddressFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *AddressFilter) Reset() {
	*x = AddressFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressFilter) ProtoMessage() {}

func (x *AddressFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressFilter.ProtoReflect.Descriptor instead.
func (*AddressFilter) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{1}
}

func (x *AddressFilter) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type Keys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *Keys) Reset() {
	*x = Keys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keys) ProtoMessage() {}

func (x *Keys) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keys.ProtoReflect.Descriptor instead.
func (*Keys) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{2}
}

func (x *Keys) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type Values struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Values) Reset() {
	*x = Values{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Values) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Values) ProtoMessage() {}

func (x *Values) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Values.ProtoReflect.Descriptor instead.
func (*Values) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{3}
}

func (x *Values) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Confirmations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confirmation int32 `protobuf:"varint,1,opt,name=confirmation,proto3" json:"confirmation,omitempty"`
}

func (x *Confirmations) Reset() {
	*x = Confirmations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Confirmations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Confirmations) ProtoMessage() {}

func (x *Confirmations) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Confirmations.ProtoReflect.Descriptor instead.
func (*Confirmations) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{4}
}

func (x *Confirmations) GetConfirmation() int32 {
	if x != nil {
		return x.Confirmation
	}
	return 0
}

type ConfirmationsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confirmations *Confirmations `protobuf:"bytes,1,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
}

func (x *ConfirmationsFilter) Reset() {
	*x = ConfirmationsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmationsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmationsFilter) ProtoMessage() {}

func (x *ConfirmationsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmationsFilter.ProtoReflect.Descriptor instead.
func (*ConfirmationsFilter) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{5}
}

func (x *ConfirmationsFilter) GetConfirmations() *Confirmations {
	if x != nil {
		return x.Confirmations
	}
	return nil
}

type ComparisonOperator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComparisonOperator int32 `protobuf:"varint,1,opt,name=comparisonOperator,proto3" json:"comparisonOperator,omitempty"`
}

func (x *ComparisonOperator) Reset() {
	*x = ComparisonOperator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparisonOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparisonOperator) ProtoMessage() {}

func (x *ComparisonOperator) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparisonOperator.ProtoReflect.Descriptor instead.
func (*ComparisonOperator) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{6}
}

func (x *ComparisonOperator) GetComparisonOperator() int32 {
	if x != nil {
		return x.ComparisonOperator
	}
	return 0
}

type BlockFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber uint64              `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Operator    *ComparisonOperator `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *BlockFilter) Reset() {
	*x = BlockFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockFilter) ProtoMessage() {}

func (x *BlockFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockFilter.ProtoReflect.Descriptor instead.
func (*BlockFilter) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{7}
}

func (x *BlockFilter) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockFilter) GetOperator() *ComparisonOperator {
	if x != nil {
		return x.Operator
	}
	return nil
}

type TimestampFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64              `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Operator  *ComparisonOperator `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *TimestampFilter) Reset() {
	*x = TimestampFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimestampFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampFilter) ProtoMessage() {}

func (x *TimestampFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampFilter.ProtoReflect.Descriptor instead.
func (*TimestampFilter) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{8}
}

func (x *TimestampFilter) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TimestampFilter) GetOperator() *ComparisonOperator {
	if x != nil {
		return x.Operator
	}
	return nil
}

type TxHashFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *TxHashFilter) Reset() {
	*x = TxHashFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxHashFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxHashFilter) ProtoMessage() {}

func (x *TxHashFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxHashFilter.ProtoReflect.Descriptor instead.
func (*TxHashFilter) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{9}
}

func (x *TxHashFilter) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type SortByTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortDirection SortDirection `protobuf:"varint,1,opt,name=sort_direction,json=sortDirection,proto3,enum=loop.SortDirection" json:"sort_direction,omitempty"`
}

func (x *SortByTimestamp) Reset() {
	*x = SortByTimestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortByTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortByTimestamp) ProtoMessage() {}

func (x *SortByTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortByTimestamp.ProtoReflect.Descriptor instead.
func (*SortByTimestamp) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{10}
}

func (x *SortByTimestamp) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortDirection_Asc
}

type SortByBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortDirection SortDirection `protobuf:"varint,1,opt,name=sort_direction,json=sortDirection,proto3,enum=loop.SortDirection" json:"sort_direction,omitempty"`
}

func (x *SortByBlock) Reset() {
	*x = SortByBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortByBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortByBlock) ProtoMessage() {}

func (x *SortByBlock) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortByBlock.ProtoReflect.Descriptor instead.
func (*SortByBlock) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{11}
}

func (x *SortByBlock) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortDirection_Asc
}

type SortBySequence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortDirection SortDirection `protobuf:"varint,1,opt,name=sort_direction,json=sortDirection,proto3,enum=loop.SortDirection" json:"sort_direction,omitempty"`
}

func (x *SortBySequence) Reset() {
	*x = SortBySequence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortBySequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortBySequence) ProtoMessage() {}

func (x *SortBySequence) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortBySequence.ProtoReflect.Descriptor instead.
func (*SortBySequence) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{12}
}

func (x *SortBySequence) GetSortDirection() SortDirection {
	if x != nil {
		return x.SortDirection
	}
	return SortDirection_Asc
}

type SortBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SortBy:
	//
	//	*SortBy_SortByTimestamp
	//	*SortBy_SortByBlock
	//	*SortBy_SortBySequence
	SortBy isSortBy_SortBy `protobuf_oneof:"sort_by"`
}

func (x *SortBy) Reset() {
	*x = SortBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortBy) ProtoMessage() {}

func (x *SortBy) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortBy.ProtoReflect.Descriptor instead.
func (*SortBy) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{13}
}

func (m *SortBy) GetSortBy() isSortBy_SortBy {
	if m != nil {
		return m.SortBy
	}
	return nil
}

func (x *SortBy) GetSortByTimestamp() *SortByTimestamp {
	if x, ok := x.GetSortBy().(*SortBy_SortByTimestamp); ok {
		return x.SortByTimestamp
	}
	return nil
}

func (x *SortBy) GetSortByBlock() *SortByBlock {
	if x, ok := x.GetSortBy().(*SortBy_SortByBlock); ok {
		return x.SortByBlock
	}
	return nil
}

func (x *SortBy) GetSortBySequence() *SortBySequence {
	if x, ok := x.GetSortBy().(*SortBy_SortBySequence); ok {
		return x.SortBySequence
	}
	return nil
}

type isSortBy_SortBy interface {
	isSortBy_SortBy()
}

type SortBy_SortByTimestamp struct {
	SortByTimestamp *SortByTimestamp `protobuf:"bytes,1,opt,name=sort_by_timestamp,json=sortByTimestamp,proto3,oneof"`
}

type SortBy_SortByBlock struct {
	SortByBlock *SortByBlock `protobuf:"bytes,2,opt,name=sort_by_block,json=sortByBlock,proto3,oneof"`
}

type SortBy_SortBySequence struct {
	SortBySequence *SortBySequence `protobuf:"bytes,3,opt,name=sort_by_sequence,json=sortBySequence,proto3,oneof"`
}

func (*SortBy_SortByTimestamp) isSortBy_SortBy() {}

func (*SortBy_SortByBlock) isSortBy_SortBy() {}

func (*SortBy_SortBySequence) isSortBy_SortBy() {}

type LimitAndSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy []*SortBy `protobuf:"bytes,2,rep,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
}

func (x *LimitAndSort) Reset() {
	*x = LimitAndSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitAndSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitAndSort) ProtoMessage() {}

func (x *LimitAndSort) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitAndSort.ProtoReflect.Descriptor instead.
func (*LimitAndSort) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{14}
}

func (x *LimitAndSort) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LimitAndSort) GetSortBy() []*SortBy {
	if x != nil {
		return x.SortBy
	}
	return nil
}

type KeyValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValues) Reset() {
	*x = KeyValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValues) ProtoMessage() {}

func (x *KeyValues) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValues.ProtoReflect.Descriptor instead.
func (*KeyValues) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{15}
}

func (x *KeyValues) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type QueryFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//
	//	*QueryFilter_AndFilter
	//	*QueryFilter_AddressFilter
	//	*QueryFilter_ConfirmationsFilter
	//	*QueryFilter_BlockFilter
	//	*QueryFilter_TimestampFilter
	//	*QueryFilter_TxHashFilter
	Filter isQueryFilter_Filter `protobuf_oneof:"filter"`
}

func (x *QueryFilter) Reset() {
	*x = QueryFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFilter) ProtoMessage() {}

func (x *QueryFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFilter.ProtoReflect.Descriptor instead.
func (*QueryFilter) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{16}
}

func (m *QueryFilter) GetFilter() isQueryFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *QueryFilter) GetAndFilter() *AndFilter {
	if x, ok := x.GetFilter().(*QueryFilter_AndFilter); ok {
		return x.AndFilter
	}
	return nil
}

func (x *QueryFilter) GetAddressFilter() *AddressFilter {
	if x, ok := x.GetFilter().(*QueryFilter_AddressFilter); ok {
		return x.AddressFilter
	}
	return nil
}

func (x *QueryFilter) GetConfirmationsFilter() *ConfirmationsFilter {
	if x, ok := x.GetFilter().(*QueryFilter_ConfirmationsFilter); ok {
		return x.ConfirmationsFilter
	}
	return nil
}

func (x *QueryFilter) GetBlockFilter() *BlockFilter {
	if x, ok := x.GetFilter().(*QueryFilter_BlockFilter); ok {
		return x.BlockFilter
	}
	return nil
}

func (x *QueryFilter) GetTimestampFilter() *TimestampFilter {
	if x, ok := x.GetFilter().(*QueryFilter_TimestampFilter); ok {
		return x.TimestampFilter
	}
	return nil
}

func (x *QueryFilter) GetTxHashFilter() *TxHashFilter {
	if x, ok := x.GetFilter().(*QueryFilter_TxHashFilter); ok {
		return x.TxHashFilter
	}
	return nil
}

type isQueryFilter_Filter interface {
	isQueryFilter_Filter()
}

type QueryFilter_AndFilter struct {
	AndFilter *AndFilter `protobuf:"bytes,1,opt,name=and_filter,json=andFilter,proto3,oneof"`
}

type QueryFilter_AddressFilter struct {
	AddressFilter *AddressFilter `protobuf:"bytes,2,opt,name=address_filter,json=addressFilter,proto3,oneof"`
}

type QueryFilter_ConfirmationsFilter struct {
	ConfirmationsFilter *ConfirmationsFilter `protobuf:"bytes,3,opt,name=confirmations_filter,json=confirmationsFilter,proto3,oneof"`
}

type QueryFilter_BlockFilter struct {
	BlockFilter *BlockFilter `protobuf:"bytes,4,opt,name=block_filter,json=blockFilter,proto3,oneof"`
}

type QueryFilter_TimestampFilter struct {
	TimestampFilter *TimestampFilter `protobuf:"bytes,5,opt,name=timestamp_filter,json=timestampFilter,proto3,oneof"`
}

type QueryFilter_TxHashFilter struct {
	TxHashFilter *TxHashFilter `protobuf:"bytes,6,opt,name=tx_hash_filter,json=txHashFilter,proto3,oneof"`
}

func (*QueryFilter_AndFilter) isQueryFilter_Filter() {}

func (*QueryFilter_AddressFilter) isQueryFilter_Filter() {}

func (*QueryFilter_ConfirmationsFilter) isQueryFilter_Filter() {}

func (*QueryFilter_BlockFilter) isQueryFilter_Filter() {}

func (*QueryFilter_TimestampFilter) isQueryFilter_Filter() {}

func (*QueryFilter_TxHashFilter) isQueryFilter_Filter() {}

// QueryKeysByValuesRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.QueryKeyRequest].
type QueryKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Filter       *QueryFilter  `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	LimitAndSort *LimitAndSort `protobuf:"bytes,3,opt,name=limit_and_sort,json=limitAndSort,proto3" json:"limit_and_sort,omitempty"`
}

func (x *QueryKeyRequest) Reset() {
	*x = QueryKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeyRequest) ProtoMessage() {}

func (x *QueryKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeyRequest.ProtoReflect.Descriptor instead.
func (*QueryKeyRequest) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{17}
}

func (x *QueryKeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueryKeyRequest) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryKeyRequest) GetLimitAndSort() *LimitAndSort {
	if x != nil {
		return x.LimitAndSort
	}
	return nil
}

// QueryKeysByValuesRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.QueryKeysRequest].
type QueryKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys         []string      `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Filter       *QueryFilter  `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	LimitAndSort *LimitAndSort `protobuf:"bytes,3,opt,name=limit_and_sort,json=limitAndSort,proto3" json:"limit_and_sort,omitempty"`
}

func (x *QueryKeysRequest) Reset() {
	*x = QueryKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeysRequest) ProtoMessage() {}

func (x *QueryKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeysRequest.ProtoReflect.Descriptor instead.
func (*QueryKeysRequest) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{18}
}

func (x *QueryKeysRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *QueryKeysRequest) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryKeysRequest) GetLimitAndSort() *LimitAndSort {
	if x != nil {
		return x.LimitAndSort
	}
	return nil
}

// QueryKeysByValuesRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.QueryKeyByValuesRequest].
type QueryKeyByValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string        `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values       *KeyValues    `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	Filter       *QueryFilter  `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	LimitAndSort *LimitAndSort `protobuf:"bytes,4,opt,name=limit_and_sort,json=limitAndSort,proto3" json:"limit_and_sort,omitempty"`
}

func (x *QueryKeyByValuesRequest) Reset() {
	*x = QueryKeyByValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeyByValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeyByValuesRequest) ProtoMessage() {}

func (x *QueryKeyByValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeyByValuesRequest.ProtoReflect.Descriptor instead.
func (*QueryKeyByValuesRequest) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{19}
}

func (x *QueryKeyByValuesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueryKeyByValuesRequest) GetValues() *KeyValues {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *QueryKeyByValuesRequest) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryKeyByValuesRequest) GetLimitAndSort() *LimitAndSort {
	if x != nil {
		return x.LimitAndSort
	}
	return nil
}

// QueryKeysByValuesRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.QueryKeysByValues].
type QueryKeysByValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys         []string      `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Values       []*KeyValues  `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	Filter       *QueryFilter  `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	LimitAndSort *LimitAndSort `protobuf:"bytes,4,opt,name=limit_and_sort,json=limitAndSort,proto3" json:"limit_and_sort,omitempty"`
}

func (x *QueryKeysByValuesRequest) Reset() {
	*x = QueryKeysByValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeysByValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeysByValuesRequest) ProtoMessage() {}

func (x *QueryKeysByValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeysByValuesRequest.ProtoReflect.Descriptor instead.
func (*QueryKeysByValuesRequest) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{20}
}

func (x *QueryKeysByValuesRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *QueryKeysByValuesRequest) GetValues() []*KeyValues {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *QueryKeysByValuesRequest) GetFilter() *QueryFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryKeysByValuesRequest) GetLimitAndSort() *LimitAndSort {
	if x != nil {
		return x.LimitAndSort
	}
	return nil
}

// GetLatestValueRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.GetLatestValue].
type GetLatestValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractName string          `protobuf:"bytes,1,opt,name=contractName,proto3" json:"contractName,omitempty"`
	Method       string          `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Params       *VersionedBytes `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GetLatestValueRequest) Reset() {
	*x = GetLatestValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestValueRequest) ProtoMessage() {}

func (x *GetLatestValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestValueRequest.ProtoReflect.Descriptor instead.
func (*GetLatestValueRequest) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{21}
}

func (x *GetLatestValueRequest) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *GetLatestValueRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *GetLatestValueRequest) GetParams() *VersionedBytes {
	if x != nil {
		return x.Params
	}
	return nil
}

// GetLatestValueReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.GetLatestValue].
type GetLatestValueReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetVal *VersionedBytes `protobuf:"bytes,1,opt,name=retVal,proto3" json:"retVal,omitempty"`
}

func (x *GetLatestValueReply) Reset() {
	*x = GetLatestValueReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestValueReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestValueReply) ProtoMessage() {}

func (x *GetLatestValueReply) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestValueReply.ProtoReflect.Descriptor instead.
func (*GetLatestValueReply) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{22}
}

func (x *GetLatestValueReply) GetRetVal() *VersionedBytes {
	if x != nil {
		return x.RetVal
	}
	return nil
}

// QueryKeysReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.QueryKeys].
type QueryKeysReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetVal *VersionedBytes `protobuf:"bytes,1,opt,name=retVal,proto3" json:"retVal,omitempty"`
}

func (x *QueryKeysReply) Reset() {
	*x = QueryKeysReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeysReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeysReply) ProtoMessage() {}

func (x *QueryKeysReply) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeysReply.ProtoReflect.Descriptor instead.
func (*QueryKeysReply) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{23}
}

func (x *QueryKeysReply) GetRetVal() *VersionedBytes {
	if x != nil {
		return x.RetVal
	}
	return nil
}

type BindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bindings []*BoundContract `protobuf:"bytes,1,rep,name=bindings,proto3" json:"bindings,omitempty"`
}

func (x *BindRequest) Reset() {
	*x = BindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRequest) ProtoMessage() {}

func (x *BindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRequest.ProtoReflect.Descriptor instead.
func (*BindRequest) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{24}
}

func (x *BindRequest) GetBindings() []*BoundContract {
	if x != nil {
		return x.Bindings
	}
	return nil
}

// BoundContract represents a [github.com/smartcontractkit/chainlink-common/pkg/types.BoundContract].
type BoundContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pending bool   `protobuf:"varint,3,opt,name=pending,proto3" json:"pending,omitempty"`
}

func (x *BoundContract) Reset() {
	*x = BoundContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chain_reader_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoundContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundContract) ProtoMessage() {}

func (x *BoundContract) ProtoReflect() protoreflect.Message {
	mi := &file_chain_reader_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundContract.ProtoReflect.Descriptor instead.
func (*BoundContract) Descriptor() ([]byte, []int) {
	return file_chain_reader_proto_rawDescGZIP(), []int{25}
}

func (x *BoundContract) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BoundContract) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BoundContract) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

var File_chain_reader_proto protoreflect.FileDescriptor

var file_chain_reader_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x1a, 0x0b, 0x63, 0x6f, 0x64, 0x65,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x09, 0x41, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x2b, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x2d,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x1a, 0x0a,
	0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x20, 0x0a, 0x06, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x50, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x44, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x65, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x34, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x69, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x27, 0x0a, 0x0c, 0x54, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x4d, 0x0a, 0x0f, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x49, 0x0a, 0x0b, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3a,
	0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x6f, 0x72,
	0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x0e, 0x53, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0e,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x73, 0x6f, 0x72, 0x74, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd3, 0x01, 0x0a, 0x06, 0x53, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x12, 0x43, 0x0a, 0x11, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x62, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x22, 0x4b,
	0x0a, 0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x53, 0x6f, 0x72,
	0x74, 0x42, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x21, 0x0a, 0x09, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f,
	0x03, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x0a, 0x61, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x41, 0x6e, 0x64, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x3c, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4e,
	0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0e, 0x74, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x88, 0x01, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x38, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x6f, 0x70,
	0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x10,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x38, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x17, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x41, 0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x6e,
	0x64, 0x53, 0x6f, 0x72, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x73, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0e, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41,
	0x6e, 0x64, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x6e, 0x64,
	0x53, 0x6f, 0x72, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x6f,
	0x70, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x22, 0x3e, 0x0a,
	0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x06, 0x72, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x22, 0x3e, 0x0a,
	0x0b, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08,
	0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x57, 0x0a,
	0x0d, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2a, 0x22, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x73, 0x63, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x10, 0x01, 0x32, 0x9e, 0x03, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x6f, 0x6f, 0x70,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x12, 0x15, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x6f, 0x6f, 0x70,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x16,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x1d, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x11, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1e,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x42,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x11,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6b, 0x69, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chain_reader_proto_rawDescOnce sync.Once
	file_chain_reader_proto_rawDescData = file_chain_reader_proto_rawDesc
)

func file_chain_reader_proto_rawDescGZIP() []byte {
	file_chain_reader_proto_rawDescOnce.Do(func() {
		file_chain_reader_proto_rawDescData = protoimpl.X.CompressGZIP(file_chain_reader_proto_rawDescData)
	})
	return file_chain_reader_proto_rawDescData
}

var file_chain_reader_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chain_reader_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_chain_reader_proto_goTypes = []interface{}{
	(SortDirection)(0),               // 0: loop.SortDirection
	(*AndFilter)(nil),                // 1: loop.AndFilter
	(*AddressFilter)(nil),            // 2: loop.AddressFilter
	(*Keys)(nil),                     // 3: loop.Keys
	(*Values)(nil),                   // 4: loop.Values
	(*Confirmations)(nil),            // 5: loop.Confirmations
	(*ConfirmationsFilter)(nil),      // 6: loop.ConfirmationsFilter
	(*ComparisonOperator)(nil),       // 7: loop.ComparisonOperator
	(*BlockFilter)(nil),              // 8: loop.BlockFilter
	(*TimestampFilter)(nil),          // 9: loop.TimestampFilter
	(*TxHashFilter)(nil),             // 10: loop.TxHashFilter
	(*SortByTimestamp)(nil),          // 11: loop.SortByTimestamp
	(*SortByBlock)(nil),              // 12: loop.SortByBlock
	(*SortBySequence)(nil),           // 13: loop.SortBySequence
	(*SortBy)(nil),                   // 14: loop.SortBy
	(*LimitAndSort)(nil),             // 15: loop.LimitAndSort
	(*KeyValues)(nil),                // 16: loop.KeyValues
	(*QueryFilter)(nil),              // 17: loop.QueryFilter
	(*QueryKeyRequest)(nil),          // 18: loop.QueryKeyRequest
	(*QueryKeysRequest)(nil),         // 19: loop.QueryKeysRequest
	(*QueryKeyByValuesRequest)(nil),  // 20: loop.QueryKeyByValuesRequest
	(*QueryKeysByValuesRequest)(nil), // 21: loop.QueryKeysByValuesRequest
	(*GetLatestValueRequest)(nil),    // 22: loop.GetLatestValueRequest
	(*GetLatestValueReply)(nil),      // 23: loop.GetLatestValueReply
	(*QueryKeysReply)(nil),           // 24: loop.QueryKeysReply
	(*BindRequest)(nil),              // 25: loop.BindRequest
	(*BoundContract)(nil),            // 26: loop.BoundContract
	(*VersionedBytes)(nil),           // 27: loop.VersionedBytes
	(*emptypb.Empty)(nil),            // 28: google.protobuf.Empty
}
var file_chain_reader_proto_depIdxs = []int32{
	17, // 0: loop.AndFilter.filters:type_name -> loop.QueryFilter
	5,  // 1: loop.ConfirmationsFilter.confirmations:type_name -> loop.Confirmations
	7,  // 2: loop.BlockFilter.operator:type_name -> loop.ComparisonOperator
	7,  // 3: loop.TimestampFilter.operator:type_name -> loop.ComparisonOperator
	0,  // 4: loop.SortByTimestamp.sort_direction:type_name -> loop.SortDirection
	0,  // 5: loop.SortByBlock.sort_direction:type_name -> loop.SortDirection
	0,  // 6: loop.SortBySequence.sort_direction:type_name -> loop.SortDirection
	11, // 7: loop.SortBy.sort_by_timestamp:type_name -> loop.SortByTimestamp
	12, // 8: loop.SortBy.sort_by_block:type_name -> loop.SortByBlock
	13, // 9: loop.SortBy.sort_by_sequence:type_name -> loop.SortBySequence
	14, // 10: loop.LimitAndSort.sort_by:type_name -> loop.SortBy
	1,  // 11: loop.QueryFilter.and_filter:type_name -> loop.AndFilter
	2,  // 12: loop.QueryFilter.address_filter:type_name -> loop.AddressFilter
	6,  // 13: loop.QueryFilter.confirmations_filter:type_name -> loop.ConfirmationsFilter
	8,  // 14: loop.QueryFilter.block_filter:type_name -> loop.BlockFilter
	9,  // 15: loop.QueryFilter.timestamp_filter:type_name -> loop.TimestampFilter
	10, // 16: loop.QueryFilter.tx_hash_filter:type_name -> loop.TxHashFilter
	17, // 17: loop.QueryKeyRequest.filter:type_name -> loop.QueryFilter
	15, // 18: loop.QueryKeyRequest.limit_and_sort:type_name -> loop.LimitAndSort
	17, // 19: loop.QueryKeysRequest.filter:type_name -> loop.QueryFilter
	15, // 20: loop.QueryKeysRequest.limit_and_sort:type_name -> loop.LimitAndSort
	16, // 21: loop.QueryKeyByValuesRequest.values:type_name -> loop.KeyValues
	17, // 22: loop.QueryKeyByValuesRequest.filter:type_name -> loop.QueryFilter
	15, // 23: loop.QueryKeyByValuesRequest.limit_and_sort:type_name -> loop.LimitAndSort
	16, // 24: loop.QueryKeysByValuesRequest.values:type_name -> loop.KeyValues
	17, // 25: loop.QueryKeysByValuesRequest.filter:type_name -> loop.QueryFilter
	15, // 26: loop.QueryKeysByValuesRequest.limit_and_sort:type_name -> loop.LimitAndSort
	27, // 27: loop.GetLatestValueRequest.params:type_name -> loop.VersionedBytes
	27, // 28: loop.GetLatestValueReply.retVal:type_name -> loop.VersionedBytes
	27, // 29: loop.QueryKeysReply.retVal:type_name -> loop.VersionedBytes
	26, // 30: loop.BindRequest.bindings:type_name -> loop.BoundContract
	22, // 31: loop.ChainReader.GetLatestValue:input_type -> loop.GetLatestValueRequest
	18, // 32: loop.ChainReader.QueryKey:input_type -> loop.QueryKeyRequest
	19, // 33: loop.ChainReader.QueryKeys:input_type -> loop.QueryKeysRequest
	20, // 34: loop.ChainReader.QueryKeyByValues:input_type -> loop.QueryKeyByValuesRequest
	21, // 35: loop.ChainReader.QueryKeysByValues:input_type -> loop.QueryKeysByValuesRequest
	25, // 36: loop.ChainReader.Bind:input_type -> loop.BindRequest
	23, // 37: loop.ChainReader.GetLatestValue:output_type -> loop.GetLatestValueReply
	24, // 38: loop.ChainReader.QueryKey:output_type -> loop.QueryKeysReply
	24, // 39: loop.ChainReader.QueryKeys:output_type -> loop.QueryKeysReply
	24, // 40: loop.ChainReader.QueryKeyByValues:output_type -> loop.QueryKeysReply
	24, // 41: loop.ChainReader.QueryKeysByValues:output_type -> loop.QueryKeysReply
	28, // 42: loop.ChainReader.Bind:output_type -> google.protobuf.Empty
	37, // [37:43] is the sub-list for method output_type
	31, // [31:37] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_chain_reader_proto_init() }
func file_chain_reader_proto_init() {
	if File_chain_reader_proto != nil {
		return
	}
	file_codec_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chain_reader_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Values); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Confirmations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmationsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComparisonOperator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimestampFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxHashFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortByTimestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortByBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortBySequence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitAndSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeyByValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeysByValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestValueReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeysReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chain_reader_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoundContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chain_reader_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SortBy_SortByTimestamp)(nil),
		(*SortBy_SortByBlock)(nil),
		(*SortBy_SortBySequence)(nil),
	}
	file_chain_reader_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*QueryFilter_AndFilter)(nil),
		(*QueryFilter_AddressFilter)(nil),
		(*QueryFilter_ConfirmationsFilter)(nil),
		(*QueryFilter_BlockFilter)(nil),
		(*QueryFilter_TimestampFilter)(nil),
		(*QueryFilter_TxHashFilter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chain_reader_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chain_reader_proto_goTypes,
		DependencyIndexes: file_chain_reader_proto_depIdxs,
		EnumInfos:         file_chain_reader_proto_enumTypes,
		MessageInfos:      file_chain_reader_proto_msgTypes,
	}.Build()
	File_chain_reader_proto = out.File
	file_chain_reader_proto_rawDesc = nil
	file_chain_reader_proto_goTypes = nil
	file_chain_reader_proto_depIdxs = nil
}
