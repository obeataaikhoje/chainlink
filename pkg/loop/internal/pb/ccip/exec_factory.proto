syntax = "proto3";

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/ccip;ccippb";

package loop.internal.pb.ccip;
import "google/protobuf/empty.proto";

// ExecutionFactoryGenerator is a gRPC service that generates a execution factory
// It is a gRPC service adapter for the https://github.com/smartcontractkit/ccip/core/services/ocr2/plugins/ccip/ccipexec/NewExecutionReportingPluginFactory
service ExecutionFactoryGenerator {
    rpc NewExecutionFactory(NewExecutionFactoryRequest) returns (NewExecutionFactoryResponse);
}

// NewExecutionFactoryRequest is a gRPC adapter to the factory configuration [https://github.com/smartcontractkit/ccip/core/services/ocr2/plugins/ccip/ccipexec/ExecutionPluginStaticConfig]
message NewExecutionFactoryRequest {
    uint32 provider_service_id = 1;
}

// NewExecutionFactoryResponse is a contains the id of the created execution factory
message NewExecutionFactoryResponse {
    uint32 execution_factory_service_id = 1;
}

// ExecutionCustomHandlers is a gRPC service that services the custom
// resource generation requests for the execution provider
service ExecutionCustomHandlers {
    rpc NewOnRampReader(NewOnRampReaderRequest) returns (NewOnRampReaderResponse) {}
    rpc NewOffRampReader(NewOffRampReaderRequest) returns (NewOffRampReaderResponse) {}
    rpc NewPriceRegistryReader(NewPriceRegistryReaderRequest) returns (NewPriceRegistryReaderResponse) {}
    rpc NewCommitStoreReader(NewCommitStoreReaderRequest) returns (NewCommitStoreReaderResponse) {}
    // TODO: BCF-2993: Add more custom handlers
    rpc Close(google.protobuf.Empty) returns (google.protobuf.Empty) {}

}

// NewOnRampReaderRequest is a gRPC adapter for the input arguments of
// [github.com/smartcontractkit/chainlink-common/pkg/types/CCIPExecProvider.NewOnRampReader]
message NewOnRampReaderRequest {
    string address = 1;
}

// NewOnRampReaderResponse is a gRPC wrapper for the return value of
// [github.com/smartcontractkit/chainlink-common/pkg/types/CCIPExecProvider.NewOnRampReader]
// It contains the id of the created onramp reader service that was created
message NewOnRampReaderResponse {
    int32 onramp_reader_service_id = 1;
}

// NewOffRampReaderRequest is a gRPC adapter for the input arguments of
// [github.com/smartcontractkit/chainlink-common/pkg/types/CCIPExecProvider.NewOffRampReader]
message NewOffRampReaderRequest {
    string address = 1;
}

// NewOffRampReaderResponse is a gRPC adapter for the output arguments of
// [github.com/smartcontractkit/chainlink-common/pkg/types/CCIPExecProvider.NewOffRampReader]
// It contains the id of the created offramp reader service that was created
message NewOffRampReaderResponse {
    int32 offramp_reader_service_id = 1;
}

// NewPriceRegistryRequest is a gRPC adapter for the input arguments of 
// [github.com/smartcontractkit/chainlink-common/pkg/types/CCIPExecProvider.NewPriceRegistryReader]
message NewPriceRegistryReaderRequest {
    string address = 1;
}

// NewPriceRegistryReaderResponse is a gRPC adapter for the output arguments of
// [github.com/smartcontractkit/chainlink-common/pkg/types/CCIPExecProvider.NewPriceRegistryReader]
// It contains the id of the created price registry reader service that was created
message NewPriceRegistryReaderResponse {
    int32 price_registry_reader_service_id = 1;
}

// NewCommitStoreReaderRequest is a gRPC adapter for the input arguments of
// [github.com/smartcontractkit/chainlink-common/pkg/types/CCIPExecProvider.NewCommitStoreReader]
message NewCommitStoreReaderRequest {
    string address = 1;
}

// NewCommitStoreReaderResponse is a gRPC adapter for the output arguments of
// [github.com/smartcontractkit/chainlink-common/pkg/types/CCIPExecProvider.NewCommitStoreReader]
// It contains the id of the created commit store reader service that was created
message NewCommitStoreReaderResponse {
    int32 commit_store_reader_service_id = 1;
}


