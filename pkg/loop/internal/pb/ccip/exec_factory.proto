syntax = "proto3";

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb/ccip;ccippb";

package loop.internal.pb.ccip;
import "google/protobuf/empty.proto";

// ExecutionFactoryGenerator is a gRPC service that generates a execution factory
// It is a gRPC service adapter for the https://github.com/smartcontractkit/ccip/core/services/ocr2/plugins/ccip/ccipexec/NewExecutionReportingPluginFactory
service ExecutionFactoryGenerator {
    rpc NewExecutionFactory(NewExecutionFactoryRequest) returns (NewExecutionFactoryResponse);
}

// NewExecutionFactoryRequest is a gRPC adapter to the factory configuration [https://github.com/smartcontractkit/ccip/core/services/ocr2/plugins/ccip/ccipexec/ExecutionPluginStaticConfig]
message NewExecutionFactoryRequest {
    uint32 provider_service_id = 1;
    ExecutionFactoryConfig config = 2;
}

// NewExecutionFactoryResponse is a contains the id of the created execution factory
message NewExecutionFactoryResponse {
    uint32 execution_factory_service_id = 1;
}

message ExecutionFactoryConfig {
    string on_ramp_address = 1; // ccip.Address
    string off_ramp_address = 2; // ccip.Address
    string commit_store_address = 3; // ccip.Address
    string token_reader_address = 4; // ccip.Address
}

service ExecutionCustomHandlers {
    rpc NewOnRampReader(NewOnRampReaderRequest) returns (NewOnRampReaderResponse) {}
    rpc NewOffRampReader(NewOffRampReaderRequest) returns (NewOffRampReaderResponse) {}
    rpc Close(google.protobuf.Empty) returns (google.protobuf.Empty) {}

}

// NewOnRampReaderRequest is a gRPC adapter for the input arguments of
message NewOnRampReaderRequest {
    string address = 1;
}

// NewOnRampReaderResponse is a gRPC adapter for the output arguments of
message NewOnRampReaderResponse {
    int32 onramp_reader_service_id = 1;
}

// NewOffRampReaderRequest is a gRPC adapter for the input arguments of
message NewOffRampReaderRequest {
    string address = 1;
}

// NewOffRampReaderResponse is a gRPC adapter for the output arguments of
message NewOffRampReaderResponse {
    int32 offramp_reader_service_id = 1;
}