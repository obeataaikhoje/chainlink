// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: exec_factory.proto

package ccippb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NewExecutionFactoryRequest is a gRPC adapter to the factory configuration [https://github.com/smartcontractkit/ccip/core/services/ocr2/plugins/ccip/ccipexec/ExecutionPluginStaticConfig]
type NewExecutionFactoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderServiceId uint32                  `protobuf:"varint,1,opt,name=provider_service_id,json=providerServiceId,proto3" json:"provider_service_id,omitempty"`
	Config            *ExecutionFactoryConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *NewExecutionFactoryRequest) Reset() {
	*x = NewExecutionFactoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewExecutionFactoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExecutionFactoryRequest) ProtoMessage() {}

func (x *NewExecutionFactoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExecutionFactoryRequest.ProtoReflect.Descriptor instead.
func (*NewExecutionFactoryRequest) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{0}
}

func (x *NewExecutionFactoryRequest) GetProviderServiceId() uint32 {
	if x != nil {
		return x.ProviderServiceId
	}
	return 0
}

func (x *NewExecutionFactoryRequest) GetConfig() *ExecutionFactoryConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// NewExecutionFactoryResponse is a contains the id of the created execution factory
type NewExecutionFactoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionFactoryServiceId uint32 `protobuf:"varint,1,opt,name=execution_factory_service_id,json=executionFactoryServiceId,proto3" json:"execution_factory_service_id,omitempty"`
}

func (x *NewExecutionFactoryResponse) Reset() {
	*x = NewExecutionFactoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewExecutionFactoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExecutionFactoryResponse) ProtoMessage() {}

func (x *NewExecutionFactoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExecutionFactoryResponse.ProtoReflect.Descriptor instead.
func (*NewExecutionFactoryResponse) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{1}
}

func (x *NewExecutionFactoryResponse) GetExecutionFactoryServiceId() uint32 {
	if x != nil {
		return x.ExecutionFactoryServiceId
	}
	return 0
}

type ExecutionFactoryConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnRampAddress      string `protobuf:"bytes,1,opt,name=on_ramp_address,json=onRampAddress,proto3" json:"on_ramp_address,omitempty"`                // ccip.Address
	OffRampAddress     string `protobuf:"bytes,2,opt,name=off_ramp_address,json=offRampAddress,proto3" json:"off_ramp_address,omitempty"`             // ccip.Address
	CommitStoreAddress string `protobuf:"bytes,3,opt,name=commit_store_address,json=commitStoreAddress,proto3" json:"commit_store_address,omitempty"` // ccip.Address
	TokenReaderAddress string `protobuf:"bytes,4,opt,name=token_reader_address,json=tokenReaderAddress,proto3" json:"token_reader_address,omitempty"` // ccip.Address
}

func (x *ExecutionFactoryConfig) Reset() {
	*x = ExecutionFactoryConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionFactoryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionFactoryConfig) ProtoMessage() {}

func (x *ExecutionFactoryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionFactoryConfig.ProtoReflect.Descriptor instead.
func (*ExecutionFactoryConfig) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{2}
}

func (x *ExecutionFactoryConfig) GetOnRampAddress() string {
	if x != nil {
		return x.OnRampAddress
	}
	return ""
}

func (x *ExecutionFactoryConfig) GetOffRampAddress() string {
	if x != nil {
		return x.OffRampAddress
	}
	return ""
}

func (x *ExecutionFactoryConfig) GetCommitStoreAddress() string {
	if x != nil {
		return x.CommitStoreAddress
	}
	return ""
}

func (x *ExecutionFactoryConfig) GetTokenReaderAddress() string {
	if x != nil {
		return x.TokenReaderAddress
	}
	return ""
}

// NewOnRampReaderRequest is a gRPC adapter for the input arguments of
type NewOnRampReaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *NewOnRampReaderRequest) Reset() {
	*x = NewOnRampReaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOnRampReaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOnRampReaderRequest) ProtoMessage() {}

func (x *NewOnRampReaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOnRampReaderRequest.ProtoReflect.Descriptor instead.
func (*NewOnRampReaderRequest) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{3}
}

func (x *NewOnRampReaderRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// NewOnRampReaderResponse is a gRPC adapter for the output arguments of
type NewOnRampReaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnrampReaderServiceId int32 `protobuf:"varint,1,opt,name=onramp_reader_service_id,json=onrampReaderServiceId,proto3" json:"onramp_reader_service_id,omitempty"`
}

func (x *NewOnRampReaderResponse) Reset() {
	*x = NewOnRampReaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOnRampReaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOnRampReaderResponse) ProtoMessage() {}

func (x *NewOnRampReaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOnRampReaderResponse.ProtoReflect.Descriptor instead.
func (*NewOnRampReaderResponse) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{4}
}

func (x *NewOnRampReaderResponse) GetOnrampReaderServiceId() int32 {
	if x != nil {
		return x.OnrampReaderServiceId
	}
	return 0
}

// NewOffRampReaderRequest is a gRPC adapter for the input arguments of
type NewOffRampReaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *NewOffRampReaderRequest) Reset() {
	*x = NewOffRampReaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOffRampReaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOffRampReaderRequest) ProtoMessage() {}

func (x *NewOffRampReaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOffRampReaderRequest.ProtoReflect.Descriptor instead.
func (*NewOffRampReaderRequest) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{5}
}

func (x *NewOffRampReaderRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// NewOffRampReaderResponse is a gRPC adapter for the output arguments of
type NewOffRampReaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfframpReaderServiceId int32 `protobuf:"varint,1,opt,name=offramp_reader_service_id,json=offrampReaderServiceId,proto3" json:"offramp_reader_service_id,omitempty"`
}

func (x *NewOffRampReaderResponse) Reset() {
	*x = NewOffRampReaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOffRampReaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOffRampReaderResponse) ProtoMessage() {}

func (x *NewOffRampReaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOffRampReaderResponse.ProtoReflect.Descriptor instead.
func (*NewOffRampReaderResponse) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{6}
}

func (x *NewOffRampReaderResponse) GetOfframpReaderServiceId() int32 {
	if x != nil {
		return x.OfframpReaderServiceId
	}
	return 0
}

var File_exec_factory_proto protoreflect.FileDescriptor

var file_exec_factory_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x4e, 0x65, 0x77,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5e,
	0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x1c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x19, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xce,
	0x01, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6e, 0x5f,
	0x72, 0x61, 0x6d, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x6e, 0x52, 0x61, 0x6d, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x5f, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x66, 0x66,
	0x52, 0x61, 0x6d, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x32, 0x0a, 0x16, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x52, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x52, 0x61, 0x6d, 0x70,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x6f, 0x6e, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x6f, 0x6e, 0x72, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x4f, 0x66,
	0x66, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x55, 0x0a, 0x18,
	0x4e, 0x65, 0x77, 0x4f, 0x66, 0x66, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x6f, 0x66, 0x66, 0x72,
	0x61, 0x6d, 0x70, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6f, 0x66, 0x66,
	0x72, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x32, 0x99, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x7c, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70,
	0x2e, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c, 0x6f,
	0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63,
	0x63, 0x69, 0x70, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xbf, 0x02, 0x0a, 0x17, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x72, 0x0a, 0x0f, 0x4e,
	0x65, 0x77, 0x4f, 0x6e, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2d,
	0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70,
	0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x52, 0x61, 0x6d, 0x70,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62,
	0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x6e, 0x52, 0x61, 0x6d, 0x70, 0x52,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x4f, 0x66, 0x66, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x4e, 0x65, 0x77, 0x4f,
	0x66, 0x66, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x2e, 0x4e, 0x65, 0x77, 0x4f,
	0x66, 0x66, 0x52, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6b, 0x69, 0x74,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x63, 0x69, 0x70, 0x3b, 0x63, 0x63, 0x69, 0x70,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exec_factory_proto_rawDescOnce sync.Once
	file_exec_factory_proto_rawDescData = file_exec_factory_proto_rawDesc
)

func file_exec_factory_proto_rawDescGZIP() []byte {
	file_exec_factory_proto_rawDescOnce.Do(func() {
		file_exec_factory_proto_rawDescData = protoimpl.X.CompressGZIP(file_exec_factory_proto_rawDescData)
	})
	return file_exec_factory_proto_rawDescData
}

var file_exec_factory_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_exec_factory_proto_goTypes = []interface{}{
	(*NewExecutionFactoryRequest)(nil),  // 0: loop.internal.pb.ccip.NewExecutionFactoryRequest
	(*NewExecutionFactoryResponse)(nil), // 1: loop.internal.pb.ccip.NewExecutionFactoryResponse
	(*ExecutionFactoryConfig)(nil),      // 2: loop.internal.pb.ccip.ExecutionFactoryConfig
	(*NewOnRampReaderRequest)(nil),      // 3: loop.internal.pb.ccip.NewOnRampReaderRequest
	(*NewOnRampReaderResponse)(nil),     // 4: loop.internal.pb.ccip.NewOnRampReaderResponse
	(*NewOffRampReaderRequest)(nil),     // 5: loop.internal.pb.ccip.NewOffRampReaderRequest
	(*NewOffRampReaderResponse)(nil),    // 6: loop.internal.pb.ccip.NewOffRampReaderResponse
	(*emptypb.Empty)(nil),               // 7: google.protobuf.Empty
}
var file_exec_factory_proto_depIdxs = []int32{
	2, // 0: loop.internal.pb.ccip.NewExecutionFactoryRequest.config:type_name -> loop.internal.pb.ccip.ExecutionFactoryConfig
	0, // 1: loop.internal.pb.ccip.ExecutionFactoryGenerator.NewExecutionFactory:input_type -> loop.internal.pb.ccip.NewExecutionFactoryRequest
	3, // 2: loop.internal.pb.ccip.ExecutionCustomHandlers.NewOnRampReader:input_type -> loop.internal.pb.ccip.NewOnRampReaderRequest
	5, // 3: loop.internal.pb.ccip.ExecutionCustomHandlers.NewOffRampReader:input_type -> loop.internal.pb.ccip.NewOffRampReaderRequest
	7, // 4: loop.internal.pb.ccip.ExecutionCustomHandlers.Close:input_type -> google.protobuf.Empty
	1, // 5: loop.internal.pb.ccip.ExecutionFactoryGenerator.NewExecutionFactory:output_type -> loop.internal.pb.ccip.NewExecutionFactoryResponse
	4, // 6: loop.internal.pb.ccip.ExecutionCustomHandlers.NewOnRampReader:output_type -> loop.internal.pb.ccip.NewOnRampReaderResponse
	6, // 7: loop.internal.pb.ccip.ExecutionCustomHandlers.NewOffRampReader:output_type -> loop.internal.pb.ccip.NewOffRampReaderResponse
	7, // 8: loop.internal.pb.ccip.ExecutionCustomHandlers.Close:output_type -> google.protobuf.Empty
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_exec_factory_proto_init() }
func file_exec_factory_proto_init() {
	if File_exec_factory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_exec_factory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewExecutionFactoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_factory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewExecutionFactoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_factory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionFactoryConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_factory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOnRampReaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_factory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOnRampReaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_factory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOffRampReaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_factory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOffRampReaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exec_factory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_exec_factory_proto_goTypes,
		DependencyIndexes: file_exec_factory_proto_depIdxs,
		MessageInfos:      file_exec_factory_proto_msgTypes,
	}.Build()
	File_exec_factory_proto = out.File
	file_exec_factory_proto_rawDesc = nil
	file_exec_factory_proto_goTypes = nil
	file_exec_factory_proto_depIdxs = nil
}
