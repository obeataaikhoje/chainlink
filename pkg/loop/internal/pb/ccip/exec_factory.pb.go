// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: exec_factory.proto

// note: the generate.go file in this dir specifies the import path of the relative proto files

package ccippb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NewExecutionFactoryRequest is a gRPC adapter to the factory configuration [https://github.com/smartcontractkit/ccip/core/services/ocr2/plugins/ccip/ccipexec/ExecutionPluginStaticConfig]
type NewExecutionFactoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnrampReaderServiceId         int32  `protobuf:"varint,1,opt,name=onramp_reader_service_id,json=onrampReaderServiceId,proto3" json:"onramp_reader_service_id,omitempty"`
	OfframpReaderServiceId        int32  `protobuf:"varint,2,opt,name=offramp_reader_service_id,json=offrampReaderServiceId,proto3" json:"offramp_reader_service_id,omitempty"`
	CommitStoreServiceId          int32  `protobuf:"varint,3,opt,name=commit_store_service_id,json=commitStoreServiceId,proto3" json:"commit_store_service_id,omitempty"`
	SourcePriceRegistiryServiceId int32  `protobuf:"varint,4,opt,name=source_price_registiry_service_id,json=sourcePriceRegistiryServiceId,proto3" json:"source_price_registiry_service_id,omitempty"`
	SourceWrappedNativeToken      string `protobuf:"bytes,5,opt,name=source_wrapped_native_token,json=sourceWrappedNativeToken,proto3" json:"source_wrapped_native_token,omitempty"` // Address
	// TODO: what is this? there is no type in the common repo for it
	TokenDataWorkerServiceId int32  `protobuf:"varint,6,opt,name=token_data_worker_service_id,json=tokenDataWorkerServiceId,proto3" json:"token_data_worker_service_id,omitempty"`
	DestChainSelector        uint64 `protobuf:"varint,7,opt,name=dest_chain_selector,json=destChainSelector,proto3" json:"dest_chain_selector,omitempty"`
	PriceRegistryServiceId   int32  `protobuf:"varint,8,opt,name=price_registry_service_id,json=priceRegistryServiceId,proto3" json:"price_registry_service_id,omitempty"`
	// TODO: what is this? there is no type in the common repo for it
	TokenPoolBatchReaderServiceId int32 `protobuf:"varint,9,opt,name=token_pool_batch_reader_service_id,json=tokenPoolBatchReaderServiceId,proto3" json:"token_pool_batch_reader_service_id,omitempty"` // TODO: there is a metrics collector defined in the corresponding config. what to do with it?
}

func (x *NewExecutionFactoryRequest) Reset() {
	*x = NewExecutionFactoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewExecutionFactoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExecutionFactoryRequest) ProtoMessage() {}

func (x *NewExecutionFactoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExecutionFactoryRequest.ProtoReflect.Descriptor instead.
func (*NewExecutionFactoryRequest) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{0}
}

func (x *NewExecutionFactoryRequest) GetOnrampReaderServiceId() int32 {
	if x != nil {
		return x.OnrampReaderServiceId
	}
	return 0
}

func (x *NewExecutionFactoryRequest) GetOfframpReaderServiceId() int32 {
	if x != nil {
		return x.OfframpReaderServiceId
	}
	return 0
}

func (x *NewExecutionFactoryRequest) GetCommitStoreServiceId() int32 {
	if x != nil {
		return x.CommitStoreServiceId
	}
	return 0
}

func (x *NewExecutionFactoryRequest) GetSourcePriceRegistiryServiceId() int32 {
	if x != nil {
		return x.SourcePriceRegistiryServiceId
	}
	return 0
}

func (x *NewExecutionFactoryRequest) GetSourceWrappedNativeToken() string {
	if x != nil {
		return x.SourceWrappedNativeToken
	}
	return ""
}

func (x *NewExecutionFactoryRequest) GetTokenDataWorkerServiceId() int32 {
	if x != nil {
		return x.TokenDataWorkerServiceId
	}
	return 0
}

func (x *NewExecutionFactoryRequest) GetDestChainSelector() uint64 {
	if x != nil {
		return x.DestChainSelector
	}
	return 0
}

func (x *NewExecutionFactoryRequest) GetPriceRegistryServiceId() int32 {
	if x != nil {
		return x.PriceRegistryServiceId
	}
	return 0
}

func (x *NewExecutionFactoryRequest) GetTokenPoolBatchReaderServiceId() int32 {
	if x != nil {
		return x.TokenPoolBatchReaderServiceId
	}
	return 0
}

// NewExecutionFactoryResponse is a contains the id of the created execution factory
type NewExecutionFactoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionFactoryServiceId int32 `protobuf:"varint,1,opt,name=execution_factory_service_id,json=executionFactoryServiceId,proto3" json:"execution_factory_service_id,omitempty"`
}

func (x *NewExecutionFactoryResponse) Reset() {
	*x = NewExecutionFactoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exec_factory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewExecutionFactoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExecutionFactoryResponse) ProtoMessage() {}

func (x *NewExecutionFactoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exec_factory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExecutionFactoryResponse.ProtoReflect.Descriptor instead.
func (*NewExecutionFactoryResponse) Descriptor() ([]byte, []int) {
	return file_exec_factory_proto_rawDescGZIP(), []int{1}
}

func (x *NewExecutionFactoryResponse) GetExecutionFactoryServiceId() int32 {
	if x != nil {
		return x.ExecutionFactoryServiceId
	}
	return 0
}

var File_exec_factory_proto protoreflect.FileDescriptor

var file_exec_factory_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69, 0x70, 0x22, 0xc6, 0x04, 0x0a, 0x1a,
	0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x6f, 0x6e,
	0x72, 0x61, 0x6d, 0x70, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6f, 0x6e,
	0x72, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x6f, 0x66, 0x66, 0x72, 0x61, 0x6d, 0x70, 0x5f, 0x72,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6f, 0x66, 0x66, 0x72, 0x61, 0x6d, 0x70, 0x52,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x21, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x69, 0x72, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x1d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x1b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3e,
	0x0a, 0x1c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x64, 0x65, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x39,
	0x0a, 0x19, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x16, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x22, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x32, 0x99, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x7c, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x6c, 0x6f, 0x6f, 0x70,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e, 0x63, 0x63, 0x69,
	0x70, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6c,
	0x6f, 0x6f, 0x70, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x62, 0x2e,
	0x63, 0x63, 0x69, 0x70, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x6b, 0x69, 0x74, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x6f, 0x6f, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x63, 0x69, 0x70, 0x3b, 0x63, 0x63, 0x69, 0x70, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exec_factory_proto_rawDescOnce sync.Once
	file_exec_factory_proto_rawDescData = file_exec_factory_proto_rawDesc
)

func file_exec_factory_proto_rawDescGZIP() []byte {
	file_exec_factory_proto_rawDescOnce.Do(func() {
		file_exec_factory_proto_rawDescData = protoimpl.X.CompressGZIP(file_exec_factory_proto_rawDescData)
	})
	return file_exec_factory_proto_rawDescData
}

var file_exec_factory_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_exec_factory_proto_goTypes = []interface{}{
	(*NewExecutionFactoryRequest)(nil),  // 0: loop.internal.pb.ccip.NewExecutionFactoryRequest
	(*NewExecutionFactoryResponse)(nil), // 1: loop.internal.pb.ccip.NewExecutionFactoryResponse
}
var file_exec_factory_proto_depIdxs = []int32{
	0, // 0: loop.internal.pb.ccip.ExecutionFactoryGenerator.NewExecutionFactory:input_type -> loop.internal.pb.ccip.NewExecutionFactoryRequest
	1, // 1: loop.internal.pb.ccip.ExecutionFactoryGenerator.NewExecutionFactory:output_type -> loop.internal.pb.ccip.NewExecutionFactoryResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_exec_factory_proto_init() }
func file_exec_factory_proto_init() {
	if File_exec_factory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_exec_factory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewExecutionFactoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exec_factory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewExecutionFactoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exec_factory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exec_factory_proto_goTypes,
		DependencyIndexes: file_exec_factory_proto_depIdxs,
		MessageInfos:      file_exec_factory_proto_msgTypes,
	}.Build()
	File_exec_factory_proto = out.File
	file_exec_factory_proto_rawDesc = nil
	file_exec_factory_proto_goTypes = nil
	file_exec_factory_proto_depIdxs = nil
}
