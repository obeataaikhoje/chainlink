syntax = "proto3";

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/loop/internal/pb";

package loop;

import "codec.proto";
import "google/protobuf/empty.proto";

service ChainReader {
  rpc GetLatestValue (GetLatestValueRequest) returns (GetLatestValueReply) {}
  rpc QueryKeys (QueryKeysRequest) returns (QueryKeysReply) {}
  rpc Bind(BindRequest) returns (google.protobuf.Empty) {}
}

message AndFilter {
  repeated QueryKeysFilter filters = 1;
}

message AddressFilter {
  repeated string addresses = 1;
}

message KeysFilter {
  repeated string keys = 1;
}

message KeysByValueFilter {
  repeated Keys keys = 1;
  repeated Values values = 2;

}

message Keys {
  repeated string keys = 1;
}

message Values {
  repeated string values = 1;
}

message Confirmations {
  int32 confirmation = 1;
}

message ConfirmationsFilter{
  Confirmations confirmations = 1;
}

message ComparisonOperator {
  int32 comparisonOperator = 1;
}

message BlockFilter{
  uint64 block_number = 1;
  ComparisonOperator operator = 2;
}

message TimestampFilter{
  uint64 timestamp = 1;
  ComparisonOperator operator = 2;
}

message TxHashFilter{
  string tx_hash = 1;
}

enum SortDirection {
  Asc = 0;
  Desc = 1;
}

message SortByTimestamp {
  SortDirection sort_direction = 1;
}

message SortByBlock {
  SortDirection sort_direction = 1;
}

message SortBySequence {
  SortDirection sort_direction = 1;
}

message SortBy {
  oneof sort_by {
    SortByTimestamp sort_by_timestamp = 1;
    SortByBlock sort_by_block = 2;
    SortBySequence sort_by_sequence = 3;
  }
}

message LimitAndSort{
  uint64 limit = 1;
  repeated SortBy sort_by = 2;
}

message QueryKeysFilter {
  oneof filter {
    AndFilter and_filter = 1;
    AddressFilter address_filter = 2;
    KeysFilter keys_filter = 3;
    KeysByValueFilter keys_by_value_filter = 4;
    ConfirmationsFilter confirmations_filter = 5;
    BlockFilter block_filter = 6;
    TimestampFilter timestamp_filter = 7;
    TxHashFilter tx_hash_filter = 8;
  }
}

message QueryKeysRequest {
  QueryKeysFilter filter = 1;
  LimitAndSort limit_and_sort = 2;
}



// GetLatestValueRequest has arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.GetLatestValue].
message GetLatestValueRequest {
  string contractName = 1;
  string method = 2;
  VersionedBytes params = 3;
}

// GetLatestValueReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.GetLatestValue].
message GetLatestValueReply {
  VersionedBytes retVal = 1;
}

// QueryKeysReply has return arguments for [github.com/smartcontractkit/chainlink-common/pkg/types.ChainReader.QueryKeys].
message QueryKeysReply {
  VersionedBytes retVal = 1;
}

message BindRequest {
  repeated BoundContract bindings = 1;
}

// BoundContract represents a [github.com/smartcontractkit/chainlink-common/pkg/types.BoundContract].
message BoundContract {
  string address = 1;
  string name = 2;
  bool pending = 3;
}
