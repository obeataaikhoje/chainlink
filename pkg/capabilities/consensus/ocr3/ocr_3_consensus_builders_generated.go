// Code generated by pkg/capabilities/cli, DO NOT EDIT.

package ocr3

import (
    "github.com/smartcontractkit/chainlink-common/pkg/workflows"
)

func NewOcr3ConsensusCapability(w *workflows.Workflow, ref string, input Ocr3ConsensusCapabilityInput, cfg Ocr3ConsensusConfig) (Ocr3ConsensusCapability, error) {
    def := workflows.StepDefinition{
       ID: "TODO?",
       Ref: ref,
       Inputs: workflows.StepInputs{
           Mapping: map[string]any{
               "Observations": input.Observations,
           },
       },
   }
    step := workflows.Step[Ocr3ConsensusOutputs]{Ref: ref, Definition: def}
    raw, err := workflows.AddStep(w, step)
    return &ocr3ConsensusCapability{CapabilityDefinition: raw}, err
}


type Ocr3ConsensusCapability interface {
    workflows.CapabilityDefinition[Ocr3ConsensusOutputs]
    Err() workflows.CapabilityDefinition[any]
    Value() Ocr3ConsensusOutputsValueCapability
    WorkflowExecutionID() workflows.CapabilityDefinition[string]
    private()
}

type ocr3ConsensusCapability struct {
    workflows.CapabilityDefinition[Ocr3ConsensusOutputs]
}


func (*ocr3ConsensusCapability) private() {}
func (c *ocr3ConsensusCapability) Err() workflows.CapabilityDefinition[any] {
    return workflows.AccessField[Ocr3ConsensusOutputs, any](c.CapabilityDefinition, "Err")
}
func (c *ocr3ConsensusCapability) Value() Ocr3ConsensusOutputsValueCapability {
     return &ocr3ConsensusOutputsValueCapability{ CapabilityDefinition: workflows.AccessField[Ocr3ConsensusOutputs, Ocr3ConsensusOutputsValue](c.CapabilityDefinition, "Value")}
}
func (c *ocr3ConsensusCapability) WorkflowExecutionID() workflows.CapabilityDefinition[string] {
    return workflows.AccessField[Ocr3ConsensusOutputs, string](c.CapabilityDefinition, "WorkflowExecutionID")
}

type Ocr3ConsensusOutputsValueCapability interface {
    workflows.CapabilityDefinition[Ocr3ConsensusOutputsValue]
    Underlying() Ocr3ConsensusOutputsValueUnderlyingCapability
    private()
}

type ocr3ConsensusOutputsValueCapability struct {
    workflows.CapabilityDefinition[Ocr3ConsensusOutputsValue]
}


func (*ocr3ConsensusOutputsValueCapability) private() {}
func (c *ocr3ConsensusOutputsValueCapability) Underlying() Ocr3ConsensusOutputsValueUnderlyingCapability {
     return &ocr3ConsensusOutputsValueUnderlyingCapability{ CapabilityDefinition: workflows.AccessField[Ocr3ConsensusOutputsValue, Ocr3ConsensusOutputsValueUnderlying](c.CapabilityDefinition, "Underlying")}
}

type Ocr3ConsensusOutputsValueUnderlyingCapability interface {
    workflows.CapabilityDefinition[Ocr3ConsensusOutputsValueUnderlying]
    private()
}

type ocr3ConsensusOutputsValueUnderlyingCapability struct {
    workflows.CapabilityDefinition[Ocr3ConsensusOutputsValueUnderlying]
}


func (*ocr3ConsensusOutputsValueUnderlyingCapability) private() {}

type PlainCapability interface {
    workflows.CapabilityDefinition[Plain]
    private()
}

type plainCapability struct {
    workflows.CapabilityDefinition[Plain]
}


func (*plainCapability) private() {}

type Ocr3ConsensusCapabilityInput struct {
    Observations workflows.CapabilityDefinition[Ocr3ConsensusInputsObservations]
}