// Code generated by pkg/capabilities/cli, DO NOT EDIT.

package chainwriter

import (
    "github.com/smartcontractkit/chainlink-common/pkg/capabilities"
    "github.com/smartcontractkit/chainlink-common/pkg/workflows"
)

func NewChainwriterTargetCapability(w *workflows.Workflow, ref string, input ChainwriterTargetCapabilityInput, cfg ChainwriterTargetConfig) (error) {
    def := workflows.StepDefinition{
       ID: ref,
       Ref: ref,
       Inputs: workflows.StepInputs{
           Mapping: map[string]any{
               "Err": input.Err,
               "Value": input.Value,
               "WorkflowExecutionID": input.WorkflowExecutionID,
           },
       },
       Config: map[string]any{
           "Address": cfg.Address,
       },
       CapabilityType: capabilities.CapabilityTypeTarget,
   }
    step := workflows.Step[ struct{}]{Ref: ref, Definition: def}
     _, err := workflows.AddStep(w, step)
    return err
}


type ChainwriterTargetCapabilityInput struct {
    Err workflows.CapabilityDefinition[any]
    Value workflows.CapabilityDefinition[ChainwriterTargetInputsValue]
    WorkflowExecutionID workflows.CapabilityDefinition[string]
}