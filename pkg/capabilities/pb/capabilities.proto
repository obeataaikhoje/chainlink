syntax = "proto3";

option go_package = "github.com/smartcontractkit/chainlink-common/pkg/capabilities/pb";

package loop;

import "values/pb/values.proto";
import "google/protobuf/empty.proto";

service BaseCapability {
  rpc Info (google.protobuf.Empty) returns (CapabilityInfoReply) {}
}

enum CapabilityType {
  CAPABILITY_TYPE_UNKNOWN = 0;
  CAPABILITY_TYPE_TRIGGER = 1;
  CAPABILITY_TYPE_ACTION = 2;
  CAPABILITY_TYPE_CONSENSUS = 3;
  CAPABILITY_TYPE_TARGET = 4;
}

message CapabilityInfoReply {
  string id = 1; 
  CapabilityType capability_type = 2;
  string description = 3;
  string version = 4;
}

message RequestMetadata {
  string workflow_id = 1;
  string workflow_execution_id = 2;
}

message CapabilityRequest {
  RequestMetadata metadata = 1;
  values.Value config = 2;
  values.Value inputs = 3;
}

service TriggerExecutable {
  rpc RegisterTrigger (TriggerRequest) returns (stream TriggerEvent) {}
  rpc UnregisterTrigger (TriggerRequest) returns (google.protobuf.Empty) {}
}

message TriggerRequest {
  string id = 1;
  string type = 2;
  RequestMetadata metadata = 3;
  values.Value config = 4;
  values.Value inputs = 5;
}

message TriggerEvent {
  string id = 1;
  int64 timestamp = 2;
  values.Value payload = 3;
}

message CapabilityResponse {
  values.Value value = 1;
  string error = 2;
}

message RegistrationMetadata {
  string workflow_id = 1;
}

message RegisterToWorkflowRequest {
  RegistrationMetadata metadata = 1;
  values.Value config = 2;
}

message UnregisterFromWorkflowRequest {
  RegistrationMetadata metadata = 1;
  values.Value config = 2;
}

service CallbackExecutable {
  rpc RegisterToWorkflow (RegisterToWorkflowRequest) returns (google.protobuf.Empty) {}
  rpc UnregisterFromWorkflow (UnregisterFromWorkflowRequest) returns (google.protobuf.Empty) {}
  rpc Execute(CapabilityRequest) returns (stream CapabilityResponse) {}
}
