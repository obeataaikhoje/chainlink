// Code generated by pkg/capabilities/cli, DO NOT EDIT.

package notstreams

// HERE

import (
    "github.com/smartcontractkit/chainlink-common/pkg/capabilities"
    "github.com/smartcontractkit/chainlink-common/pkg/workflows"
)

func NewNotstreamsTriggerCapability(w *workflows.Workflow, ref string, cfg NotstreamsTriggerConfig) (NotstreamsTriggerCapability,error) {
    def := workflows.StepDefinition{
       ID: ref,
       Ref: ref,
       Inputs: workflows.StepInputs{
           Mapping: map[string]any{
           },
       },
       Config: map[string]any{
           "MaxFrequencyMs": cfg.MaxFrequencyMs,
       },
       CapabilityType: capabilities.CapabilityTypeTrigger,
   }
    step := workflows.Step[Feed]{Definition: def}
     raw, err := workflows.AddStep(w, step)
    return &notstreamsTriggerCapability{CapabilityDefinition: raw}, err
}


type NotstreamsTriggerCapability interface {
    workflows.CapabilityDefinition[Feed]
    FullReport() workflows.CapabilityDefinition[string]
    Price() workflows.CapabilityDefinition[string]
    ReportContext() workflows.CapabilityDefinition[string]
    Signatures() workflows.CapabilityDefinition[[]string]
    Timestamp() workflows.CapabilityDefinition[int]
    private()
}

type notstreamsTriggerCapability struct {
    workflows.CapabilityDefinition[Feed]
}


func (*notstreamsTriggerCapability) private() {}
func (c *notstreamsTriggerCapability) FullReport() workflows.CapabilityDefinition[string] {
    return workflows.AccessField[Feed, string](c.CapabilityDefinition, "FullReport")
}
func (c *notstreamsTriggerCapability) Price() workflows.CapabilityDefinition[string] {
    return workflows.AccessField[Feed, string](c.CapabilityDefinition, "Price")
}
func (c *notstreamsTriggerCapability) ReportContext() workflows.CapabilityDefinition[string] {
    return workflows.AccessField[Feed, string](c.CapabilityDefinition, "ReportContext")
}
func (c *notstreamsTriggerCapability) Signatures() workflows.CapabilityDefinition[[]string] {
    return workflows.AccessField[Feed, []string](c.CapabilityDefinition, "Signatures")
}
func (c *notstreamsTriggerCapability) Timestamp() workflows.CapabilityDefinition[int] {
    return workflows.AccessField[Feed, int](c.CapabilityDefinition, "Timestamp")
}

type simpleNotstreamsTriggerCapability struct {
    fullReport workflows.CapabilityDefinition[string]
    price workflows.CapabilityDefinition[string]
    reportContext workflows.CapabilityDefinition[string]
    signatures workflows.CapabilityDefinition[[]string]
    timestamp workflows.CapabilityDefinition[int]
}
func (c *simpleNotstreamsTriggerCapability) FullReport() workflows.CapabilityDefinition[string] {
    return c.fullReport
}
func (c *simpleNotstreamsTriggerCapability) Price() workflows.CapabilityDefinition[string] {
    return c.price
}
func (c *simpleNotstreamsTriggerCapability) ReportContext() workflows.CapabilityDefinition[string] {
    return c.reportContext
}
func (c *simpleNotstreamsTriggerCapability) Signatures() workflows.CapabilityDefinition[[]string] {
    return c.signatures
}
func (c *simpleNotstreamsTriggerCapability) Timestamp() workflows.CapabilityDefinition[int] {
    return c.timestamp
}

func (c *simpleNotstreamsTriggerCapability) private() {}


